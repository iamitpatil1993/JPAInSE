2017-12-02 16:44:03 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:44:03 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:44:03 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:44:03 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:44:03 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:44:03 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:44:03 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:44:03 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:44:03 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:44:03 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:44:03 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:44:03 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:44:03 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:44:03 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:44:03 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:44:03 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:44:03 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:44:03 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:44:03 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:44:03 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:44:03 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:44:03 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:44:03 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:44:03 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:44:03 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:44:03 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:44:03 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:44:03 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:44:03 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:44:03 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:44:04 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:44:04 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:44:04 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:44:04 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:44:04 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:44:04 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:44:04 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:44:04 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:44:04 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:44:04 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:44:04 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:44:04 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:44:04 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:44:04 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:44:04 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:44:04 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:44:04 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:44:04 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:44:04 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:44:04 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:44:04 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:44:04 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:44:04 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:44:04 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:44:04 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:44:04 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:44:04 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:44:04 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:44:04 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:44:04 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:44:04 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:44:04 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:44:04 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:44:04 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:44:04 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:44:04 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:44:04 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:44:04 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:44:04 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:44:04 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:44:04 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:44:04 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:44:04 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:44:04 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:44:04 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:44:04 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:44:04 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:44:04 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:44:04 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:44:04 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:44:04 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:44:04 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:44:04 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:44:04 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:44:04 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:44:04 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:44:04 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:44:04 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:44:04 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:44:04 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:44:04 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:44:04 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:44:04 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:44:04 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:44:04 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:44:04 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:44:04 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:44:04 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:44:04 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:44:04 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:44:04 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:44:04 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:44:04 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:44:04 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:44:04 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:44:04 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:44:04 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:44:04 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:44:04 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:44:04 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:44:04 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:44:04 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:44:04 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:44:04 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:44:04 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:44:04 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:44:04 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:44:04 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:44:04 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:44:04 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:44:04 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:44:04 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:44:04 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:44:04 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:44:04 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:44:04 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:44:04 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:44:04 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: 15d5e557-5735-46dd-bd81-25b55a1ab1ed (<unnamed>)
2017-12-02 16:44:04 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:44:04 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:44:04 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:44:04 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:44:04 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:44:04 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:44:04 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:44:04 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:44:04 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:44:04 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:44:04 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:44:04 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:44:04 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:44:04 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:44:04 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:44:04 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:44:04 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:44:04 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:44:04 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:44:04 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:44:04 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:44:04 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:44:04 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:44:04 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:44:04 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:44:04 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:44:04 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:44:04 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:44:04 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:44:04 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:44:04 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:44:04 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:44:04 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:44:04 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 4
2017-12-02 16:44:04 INFO  AddressService:21 - Address saved successfully!
2017-12-02 16:44:04 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:44:04 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:44:04 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:44:04 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:44:04 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:44:04 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:44:04 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:44:04 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:44:04 DEBUG LogicalConnectionImpl:246 - Releasing JDBC connection
2017-12-02 16:44:04 DEBUG LogicalConnectionImpl:264 - Released JDBC connection
2017-12-02 16:44:33 DEBUG DriverManagerConnectionProviderImpl:120 - Connection pool now considered primed; min-size will be maintained
2017-12-02 16:46:25 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:46:25 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:46:25 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:46:25 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:46:25 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:46:25 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:46:25 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:46:25 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:46:25 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:46:25 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:46:25 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:46:25 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:46:25 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:46:25 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:46:25 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:46:25 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:46:26 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:46:26 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:46:26 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:46:26 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:46:26 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:46:26 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:46:26 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:46:26 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:46:26 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:46:26 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:46:26 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:46:26 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:46:26 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:46:26 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:46:26 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:46:26 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:46:26 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:46:26 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:46:26 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:46:26 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:46:26 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:46:26 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:46:26 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:46:26 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:46:26 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:46:26 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:46:26 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:46:26 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:46:26 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:46:26 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:46:26 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:46:26 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:46:26 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:46:26 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:46:26 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:46:26 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:46:26 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:46:26 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:46:26 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:46:26 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:46:26 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:46:26 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:46:26 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:46:26 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:46:26 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:46:26 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:46:26 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:46:26 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:46:26 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:46:26 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:46:26 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:46:26 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:46:26 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:46:26 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:46:26 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:46:26 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:46:26 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:46:26 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:46:26 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:46:26 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:46:26 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:46:26 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:46:26 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:46:26 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:46:26 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:46:26 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:46:26 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:46:26 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:46:26 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:46:26 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:46:26 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:46:26 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:46:26 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:46:26 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:46:26 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:46:26 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:46:26 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:46:26 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:46:26 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:46:26 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:46:26 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:46:26 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:46:26 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:46:26 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:46:26 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:46:26 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:46:26 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:46:26 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:46:26 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:46:26 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:46:26 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:46:26 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:46:26 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:46:26 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:46:26 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:46:27 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:46:27 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:46:27 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:46:27 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:46:27 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:46:27 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:46:27 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:46:27 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:46:27 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:46:27 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:46:27 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:46:27 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:46:27 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:46:27 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:46:27 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:46:27 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:46:27 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: e605f81d-b3f4-452d-a8fa-f968dd7f051d (<unnamed>)
2017-12-02 16:46:27 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:46:27 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:46:27 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:46:27 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:46:27 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:46:27 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:46:27 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:46:27 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:46:27 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:46:27 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:46:27 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:46:27 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:46:27 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:46:27 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:46:27 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:46:27 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:46:27 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:46:27 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:46:27 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:46:27 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:46:27 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:46:27 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:46:27 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:46:27 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:46:27 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:46:27 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:46:27 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:46:27 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:46:27 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:46:27 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:46:27 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:46:27 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:46:27 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:46:27 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 5
2017-12-02 16:46:27 INFO  AddressService:21 - Address saved successfully with address_id :: 5
2017-12-02 16:46:27 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:46:27 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:46:27 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:46:27 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:46:27 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:46:27 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:46:27 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=5}
2017-12-02 16:46:27 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:46:27 DEBUG LogicalConnectionImpl:246 - Releasing JDBC connection
2017-12-02 16:46:27 DEBUG LogicalConnectionImpl:264 - Released JDBC connection
2017-12-02 16:46:56 DEBUG DriverManagerConnectionProviderImpl:120 - Connection pool now considered primed; min-size will be maintained
2017-12-02 16:50:54 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:50:54 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:50:55 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:50:55 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:50:55 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:50:55 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:50:55 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:50:55 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:50:55 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:50:55 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:50:55 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:50:55 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:50:55 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:50:55 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:50:55 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:50:55 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:50:55 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:50:55 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:50:55 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:50:55 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:50:55 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:50:55 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:50:55 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:50:55 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:50:55 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:50:55 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:50:55 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:50:55 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:50:55 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:50:55 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:50:56 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:50:56 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:50:56 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:50:56 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:50:56 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:50:56 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:50:56 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:50:56 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:50:56 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:50:56 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:50:56 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:50:56 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:50:56 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:50:56 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:50:56 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:50:56 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:50:56 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:50:56 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:50:56 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:50:56 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:50:56 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:50:56 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:50:56 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:50:56 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:50:56 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:50:56 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:50:56 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:50:56 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:50:56 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:50:56 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:50:56 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:50:56 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:50:56 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:50:56 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:50:56 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:50:56 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:50:56 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:50:56 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:50:56 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:50:56 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:50:56 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:50:56 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:50:56 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:50:56 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:50:56 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:50:56 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:50:56 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:50:56 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:50:56 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:50:56 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:50:56 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:50:56 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:50:56 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:50:56 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:50:56 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:50:56 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:50:56 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:50:56 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:50:56 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:50:56 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:50:56 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:50:56 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:50:56 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:50:56 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:50:56 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:50:56 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:50:56 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:50:56 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:50:56 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:50:56 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:50:56 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:50:56 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:50:56 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:50:56 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:50:56 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:50:56 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:50:56 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:50:56 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:50:56 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:50:56 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:50:56 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:50:56 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:50:56 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:50:56 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:50:56 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:50:56 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:50:56 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:50:56 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:50:56 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:50:56 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:50:56 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:50:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:50:56 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:50:56 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:50:56 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:50:56 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:50:56 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:50:56 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:50:56 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: c6b21df4-d9c9-4e65-9eb0-e159f55e9b55 (<unnamed>)
2017-12-02 16:50:56 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:50:56 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:50:56 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:50:56 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:50:56 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:50:56 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:50:56 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:50:56 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:50:56 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:50:56 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:50:56 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:50:56 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:50:56 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:50:56 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:50:56 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:50:56 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:50:56 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:50:56 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:50:56 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:50:56 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:50:56 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:50:56 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:50:56 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:50:56 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:50:56 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:50:56 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:50:56 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:50:56 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:50:56 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:50:56 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:50:56 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:50:56 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:50:56 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:50:56 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 6
2017-12-02 16:50:56 INFO  AddressService:21 - Address saved successfully with address_id :: 6
2017-12-02 16:50:56 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:50:56 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:50:56 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:50:56 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:50:56 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:50:56 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:50:56 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=6}
2017-12-02 16:50:56 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:50:56 DEBUG LogicalConnectionImpl:246 - Releasing JDBC connection
2017-12-02 16:50:56 DEBUG LogicalConnectionImpl:264 - Released JDBC connection
2017-12-02 16:50:56 DEBUG AbstractEntityManagerImpl:1529 - Mark transaction for rollback
2017-12-02 16:51:25 DEBUG DriverManagerConnectionProviderImpl:120 - Connection pool now considered primed; min-size will be maintained
2017-12-02 16:51:35 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:51:35 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:51:35 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:51:35 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:51:35 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:51:35 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:51:35 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:51:35 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:51:35 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:51:35 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:51:35 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:51:35 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:51:35 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:51:35 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:51:35 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:51:36 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:51:36 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:51:36 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:51:36 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:51:36 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:51:36 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:51:36 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:51:36 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:51:36 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:51:36 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:51:36 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:51:36 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:51:36 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:51:36 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:51:36 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:51:36 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:51:36 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:51:36 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:51:36 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:51:36 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:51:36 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:51:36 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:51:36 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:51:36 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:51:36 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:51:36 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:51:36 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:51:36 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:51:36 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:51:36 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:51:36 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:51:36 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:51:36 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:51:36 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:51:36 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:51:36 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:51:36 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:51:36 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:51:36 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:51:36 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:51:36 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:51:36 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:51:36 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:51:36 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:51:36 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:51:36 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:51:36 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:51:36 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:51:36 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:51:36 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:51:36 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:51:36 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:51:36 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:51:36 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:51:36 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:51:36 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:51:36 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:51:36 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:51:36 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:51:36 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:51:36 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:51:36 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:51:36 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:51:36 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:51:36 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:51:36 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:51:36 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:51:36 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:51:36 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:51:36 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:51:36 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:51:36 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:51:36 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:51:36 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:51:36 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:51:36 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:51:36 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:51:36 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:51:36 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:51:36 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:51:36 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:51:36 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:51:36 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:51:36 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:51:36 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:51:36 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:51:36 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:51:36 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:51:36 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:51:36 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:51:36 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:51:36 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:51:36 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:51:36 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:51:36 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:51:36 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:51:36 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:51:36 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:51:36 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:51:36 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:51:36 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:51:36 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:51:36 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:51:36 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:36 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:36 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:36 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:51:36 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:36 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:36 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:36 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:51:36 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:36 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:36 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:36 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:51:36 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:51:36 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:37 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:37 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:37 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:51:37 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:37 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:37 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:37 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:51:37 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:37 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:37 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:37 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:51:37 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:37 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:37 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:37 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:51:37 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:37 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:37 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:37 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:51:37 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:37 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:37 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:37 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:51:37 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:37 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:37 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:37 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:51:37 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:51:37 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:51:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:51:37 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:51:37 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:51:37 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:51:37 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:51:37 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:51:37 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:51:37 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: 16452527-b500-49cc-9381-edb43a695697 (<unnamed>)
2017-12-02 16:51:37 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:51:37 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:51:37 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:51:37 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:51:37 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:51:37 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:51:37 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:51:37 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:51:37 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:51:37 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:51:37 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:51:37 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:51:37 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:51:37 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:51:37 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:51:37 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:51:37 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:51:37 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:51:37 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:51:37 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:51:37 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:51:37 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:51:37 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:51:37 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:51:37 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:51:37 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:51:37 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:51:37 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:51:37 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:51:37 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:51:37 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:51:37 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:51:37 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:51:37 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 7
2017-12-02 16:51:37 INFO  AddressService:21 - Address saved successfully with address_id :: 7
2017-12-02 16:51:37 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:51:37 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:51:37 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:51:37 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:51:37 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:51:37 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:51:37 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=7}
2017-12-02 16:51:37 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:51:37 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:51:37 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:51:37 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:51:37 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:51:37 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:51:37 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#4]
2017-12-02 16:51:37 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#4]
2017-12-02 16:51:37 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#4
2017-12-02 16:51:37 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:51:37 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:51:37 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:51:37 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2017-12-02 16:51:37 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:51:37 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:51:37 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:51:37 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=7}
2017-12-02 16:51:37 DEBUG SQL:109 - 
    update
        address 
    set
        city=?,
        country=?,
        postcode=?,
        province=?,
        street=? 
    where
        address_id=?
2017-12-02 16:51:37 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:51:37 DEBUG JdbcCoordinatorImpl:201 - HHH000420: Closing un-released batch
2017-12-02 16:51:37 DEBUG LogicalConnectionImpl:246 - Releasing JDBC connection
2017-12-02 16:51:37 DEBUG LogicalConnectionImpl:264 - Released JDBC connection
2017-12-02 16:51:37 INFO  MainClass:35 - address saved with address_id = 4
2017-12-02 16:52:06 DEBUG DriverManagerConnectionProviderImpl:120 - Connection pool now considered primed; min-size will be maintained
2017-12-02 16:52:46 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:52:46 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:52:46 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:52:46 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:52:46 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:52:46 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:52:46 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:52:46 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:52:46 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:52:46 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:52:46 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:52:46 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:52:46 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:52:46 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:52:46 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:52:47 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:52:47 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:52:47 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:52:47 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:52:47 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:52:47 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:52:47 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:52:47 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:52:47 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:52:47 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:52:47 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:52:47 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:52:47 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:52:47 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:52:47 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:52:47 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:52:47 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:52:47 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:52:47 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:52:47 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:52:47 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:52:47 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:52:47 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:52:47 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:52:47 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:52:47 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:52:47 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:52:47 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:52:47 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:52:47 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:52:47 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:52:47 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:52:47 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:52:47 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:52:47 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:52:47 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:52:47 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:52:47 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:52:47 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:52:47 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:52:47 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:52:47 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:52:47 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:52:47 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:52:47 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:52:47 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:52:47 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:52:47 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:52:47 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:52:47 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:52:47 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:52:47 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:52:47 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:52:47 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:52:47 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:52:47 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:52:47 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:52:47 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:52:47 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:52:47 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:52:47 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:52:47 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:52:47 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:52:47 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:52:47 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:52:47 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:52:47 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:52:47 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:52:47 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:52:47 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:52:47 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:52:47 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:52:47 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:52:47 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:52:47 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:52:47 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:52:47 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:52:47 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:52:47 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:52:47 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:52:47 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:52:47 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:52:47 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:52:47 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:52:47 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:52:47 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:52:47 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:52:47 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:52:47 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:52:47 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:52:47 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:52:47 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:52:47 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:52:47 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:52:47 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:52:47 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:52:48 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:52:48 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:52:48 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:52:48 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:52:48 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:52:48 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:52:48 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:52:48 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:52:48 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:52:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:52:48 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:52:48 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:52:48 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:52:48 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:52:48 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:52:48 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:52:48 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: aafcae97-85f9-45c4-a720-66528e62e97c (<unnamed>)
2017-12-02 16:52:48 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:52:48 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:52:48 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:52:48 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:52:48 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:52:48 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:52:48 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:52:48 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:52:48 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:52:48 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:52:48 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:52:48 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:52:48 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:52:48 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:52:48 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:52:48 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:52:48 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:52:48 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:52:48 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:52:48 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:52:48 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:52:48 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:52:48 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:52:48 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:52:48 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:52:48 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:52:48 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:52:48 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:52:48 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:52:48 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:52:48 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:52:48 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:52:48 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:52:48 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 8
2017-12-02 16:52:48 INFO  AddressService:21 - Address saved successfully with address_id :: 8
2017-12-02 16:52:48 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:52:48 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:52:48 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:52:48 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:52:48 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:52:48 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:52:48 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=8}
2017-12-02 16:52:48 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:52:48 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:52:48 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:52:48 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:52:48 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:52:48 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:52:48 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#4]
2017-12-02 16:52:48 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#4]
2017-12-02 16:52:48 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#4
2017-12-02 16:52:48 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:52:48 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:52:48 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:52:48 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2017-12-02 16:52:48 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:52:48 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:52:48 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:52:48 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=8}
2017-12-02 16:52:48 DEBUG SQL:109 - 
    update
        address 
    set
        city=?,
        country=?,
        postcode=?,
        province=?,
        street=? 
    where
        address_id=?
2017-12-02 16:52:48 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:52:48 DEBUG JdbcCoordinatorImpl:201 - HHH000420: Closing un-released batch
2017-12-02 16:52:48 DEBUG LogicalConnectionImpl:246 - Releasing JDBC connection
2017-12-02 16:52:48 DEBUG LogicalConnectionImpl:264 - Released JDBC connection
2017-12-02 16:52:48 INFO  MainClass:34 - address saved with address_id = 4
2017-12-02 16:54:44 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:54:44 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:54:44 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:54:44 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:54:44 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:54:44 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:54:44 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:54:44 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:54:44 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:54:44 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:54:44 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:54:44 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:54:44 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:54:44 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:54:44 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:54:44 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:54:45 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:54:45 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:54:45 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:54:45 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:54:45 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:54:45 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:54:45 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:54:45 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:54:45 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:54:45 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:54:45 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:54:45 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:54:45 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:54:45 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:54:45 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:54:45 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:54:45 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:54:45 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:54:45 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:54:45 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:54:45 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:54:45 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:54:45 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:54:45 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:54:45 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:54:45 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:54:45 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:54:45 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:54:45 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:54:45 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:54:45 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:54:45 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:54:45 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:54:45 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:54:45 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:54:45 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:54:45 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:54:45 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:54:45 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:54:45 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:54:45 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:54:45 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:54:45 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:54:45 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:54:45 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:54:45 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:54:45 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:54:45 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:54:45 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:54:45 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:54:45 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:54:45 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:54:45 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:54:45 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:54:45 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:54:45 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:54:45 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:54:45 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:54:45 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:54:45 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:54:45 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:54:45 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:54:45 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:54:45 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:54:45 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:54:45 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:54:45 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:54:45 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:54:45 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:54:45 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:54:45 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:54:45 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:54:45 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:54:45 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:54:45 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:54:45 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:54:45 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:54:45 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:54:45 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:54:45 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:54:45 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:54:45 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:54:45 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:54:45 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:54:45 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:54:45 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:54:45 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:54:45 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:54:45 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:54:45 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:54:45 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:54:45 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:54:45 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:54:45 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:54:45 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:54:45 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:54:45 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:54:45 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:54:45 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:54:45 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:54:45 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:54:45 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:54:45 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:54:45 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:54:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:54:45 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:54:45 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:54:45 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:54:45 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:54:45 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:54:45 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:54:45 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: 8ef2e6bc-6366-49f8-bc60-4d0580aeb524 (<unnamed>)
2017-12-02 16:54:45 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:54:45 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:54:45 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:54:45 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:54:45 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:54:45 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:54:45 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:54:45 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:54:45 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:54:45 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:54:45 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:54:45 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:54:45 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:54:45 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:54:45 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:54:46 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:54:46 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:54:46 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:54:46 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:54:46 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:54:46 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:54:46 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:54:46 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:54:46 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:54:46 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:54:46 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:54:46 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:54:46 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:54:46 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:54:46 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:54:46 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:54:46 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:54:46 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:54:46 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 9
2017-12-02 16:54:46 INFO  AddressService:21 - Address saved successfully with address_id :: 9
2017-12-02 16:54:46 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:54:46 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:54:46 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:54:46 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:54:46 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:54:46 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:54:46 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=9}
2017-12-02 16:54:46 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:54:46 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:54:46 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:54:46 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:54:46 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:54:46 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:54:46 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#4]
2017-12-02 16:54:46 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#4]
2017-12-02 16:54:46 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#4
2017-12-02 16:54:46 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:54:46 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:54:46 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:54:46 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-12-02 16:54:46 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:54:46 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:54:46 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:54:46 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=9}
2017-12-02 16:54:46 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:54:46 DEBUG LogicalConnectionImpl:246 - Releasing JDBC connection
2017-12-02 16:54:46 DEBUG LogicalConnectionImpl:264 - Released JDBC connection
2017-12-02 16:54:46 INFO  MainClass:34 - address saved with address_id = 4
2017-12-02 16:54:46 DEBUG AbstractEntityManagerImpl:1529 - Mark transaction for rollback
2017-12-02 16:54:58 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:54:58 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:54:59 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:54:59 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:54:59 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:54:59 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:54:59 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:54:59 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:54:59 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:54:59 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:54:59 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:54:59 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:54:59 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:54:59 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:54:59 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:54:59 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:54:59 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:54:59 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:54:59 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:54:59 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:54:59 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:54:59 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:54:59 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:54:59 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:54:59 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:54:59 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:54:59 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:54:59 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:54:59 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:54:59 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:54:59 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:54:59 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:54:59 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:54:59 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:54:59 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:54:59 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:54:59 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:55:00 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:55:00 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:55:00 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:55:00 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:55:00 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:55:00 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:55:00 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:55:00 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:55:00 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:55:00 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:55:00 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:55:00 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:55:00 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:55:00 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:55:00 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:55:00 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:55:00 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:55:00 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:55:00 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:55:00 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:55:00 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:55:00 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:55:00 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:55:00 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:55:00 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:55:00 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:55:00 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:55:00 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:55:00 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:55:00 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:55:00 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:55:00 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:55:00 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:55:00 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:55:00 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:55:00 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:55:00 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:55:00 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:55:00 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:55:00 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:55:00 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:55:00 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:55:00 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:55:00 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:55:00 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:55:00 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:55:00 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:55:00 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:55:00 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:55:00 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:55:00 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:55:00 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:55:00 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:55:00 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:55:00 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:55:00 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:55:00 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:55:00 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:55:00 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:55:00 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:55:00 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:55:00 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:55:00 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:55:00 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:55:00 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:55:00 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:55:00 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:55:00 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:55:00 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:55:00 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:55:00 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:55:00 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:55:00 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:55:00 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:55:00 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:55:00 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:55:00 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:55:00 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:55:00 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:55:00 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:55:00 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:55:00 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:55:00 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:55:00 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:55:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:55:00 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:55:00 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:55:00 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:55:00 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:55:00 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:55:00 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:55:00 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: 02fa6cca-003d-4abf-a21e-4cc7e3b1692d (<unnamed>)
2017-12-02 16:55:00 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:55:00 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:55:00 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:55:00 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:55:00 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:55:00 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:55:00 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:55:00 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:55:00 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:55:00 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:55:00 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:55:00 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:55:00 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:55:00 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:55:00 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:55:00 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:55:00 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:55:00 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:55:00 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:55:00 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:55:00 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:55:00 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:55:00 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:55:00 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:55:00 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:55:00 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:55:00 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:55:00 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:55:00 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:55:00 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:55:00 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:55:00 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:55:00 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:55:00 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 10
2017-12-02 16:55:00 INFO  AddressService:21 - Address saved successfully with address_id :: 10
2017-12-02 16:55:00 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:55:00 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:55:00 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=10}
2017-12-02 16:55:00 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:55:00 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:55:00 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:55:00 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:55:00 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:55:00 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:55:00 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#4]
2017-12-02 16:55:00 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#4]
2017-12-02 16:55:00 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#4
2017-12-02 16:55:00 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:55:00 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:55:00 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:55:00 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=10}
2017-12-02 16:55:00 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:55:00 INFO  MainClass:33 - address saved with address_id = 4
2017-12-02 16:55:00 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:55:00 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:55:00 DEBUG SessionImpl:972 - Initializing proxy: [com.example.jpa.se.entity.Address#5]
2017-12-02 16:55:00 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:55:00 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:55:00 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:55:00 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#5]
2017-12-02 16:55:00 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#5]
2017-12-02 16:55:00 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#5
2017-12-02 16:55:00 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
2017-12-02 16:55:00 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:55:00 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:55:00 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:55:00 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=5}
2017-12-02 16:55:00 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=10}
2017-12-02 16:55:00 DEBUG SQL:109 - 
    delete 
    from
        address 
    where
        address_id=?
2017-12-02 16:55:00 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:58:24 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:58:24 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:58:24 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:58:24 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:58:24 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:58:24 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:58:24 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:58:24 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:58:24 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:58:24 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:58:24 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:58:24 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:58:24 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:58:24 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:58:24 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:58:25 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:58:25 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:58:25 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:58:25 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:58:25 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:58:25 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:58:25 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:58:25 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:58:25 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:58:25 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:58:25 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:58:25 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:58:25 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:58:25 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:58:25 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:58:25 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:58:25 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:58:25 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:58:25 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:58:25 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:58:25 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:58:25 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:58:25 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:58:25 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:58:25 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:58:25 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:58:25 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:58:25 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:58:25 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:58:25 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:58:25 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:58:25 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:58:25 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:58:25 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:58:25 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:58:25 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:58:25 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:58:25 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:58:25 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:58:25 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:58:25 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:58:25 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:58:25 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:58:25 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:58:25 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:58:25 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:58:25 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:58:25 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:58:25 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:58:25 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:58:25 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:58:25 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:58:25 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:58:25 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:58:25 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:58:25 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:58:25 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:58:25 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:58:25 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:58:25 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:58:25 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:58:25 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:58:25 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:58:25 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:58:25 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:58:25 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:58:25 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:58:25 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:58:25 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:58:25 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:58:25 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:58:25 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:58:25 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:58:25 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:58:25 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:58:25 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:58:25 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:58:25 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:58:25 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:58:25 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:58:25 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:58:25 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:58:25 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:58:25 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:58:25 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:58:25 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:58:25 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:58:25 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:58:25 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:58:25 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:58:25 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:58:25 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:58:25 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:58:25 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:58:25 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:58:25 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:58:25 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:58:25 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:58:25 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:58:25 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:58:25 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:58:25 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:58:25 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:58:25 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:58:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:58:25 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:58:25 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:58:25 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:58:25 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:58:25 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:58:25 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:58:25 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: 603acf1d-e220-400a-9a33-5311fba94340 (<unnamed>)
2017-12-02 16:58:25 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:58:25 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:58:25 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:58:25 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:58:25 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:58:25 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:58:25 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:58:25 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:58:25 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:58:25 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:58:25 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:58:25 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:58:25 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:58:25 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:58:25 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:58:25 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:58:25 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:58:25 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:58:25 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:58:25 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:58:25 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:58:25 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:58:25 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:58:25 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:58:25 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:58:26 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:58:26 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:58:26 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:58:26 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:58:26 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:58:26 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:58:26 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:58:26 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:58:26 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 11
2017-12-02 16:58:26 INFO  AddressService:21 - Address saved successfully with address_id :: 11
2017-12-02 16:58:26 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:58:26 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:58:26 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:58:26 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:58:26 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:58:26 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:58:26 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=11}
2017-12-02 16:58:26 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:58:26 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:58:26 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:58:26 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:58:26 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:58:26 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:58:26 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#4]
2017-12-02 16:58:26 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#4]
2017-12-02 16:58:26 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#4
2017-12-02 16:58:26 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:58:26 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:58:26 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:58:26 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-12-02 16:58:26 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:58:26 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:58:26 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=11}
2017-12-02 16:58:26 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:58:26 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:58:26 INFO  MainClass:36 - address saved with address_id = 4
2017-12-02 16:58:26 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:58:26 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:58:26 DEBUG SessionImpl:972 - Initializing proxy: [com.example.jpa.se.entity.Address#5]
2017-12-02 16:58:26 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:58:26 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#5
2017-12-02 16:58:26 DEBUG AbstractEntityManagerImpl:1529 - Mark transaction for rollback
2017-12-02 16:59:01 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:59:01 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:59:01 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:59:01 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:59:01 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:59:01 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:59:01 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:59:01 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:59:01 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:59:01 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:59:01 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:59:01 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:59:01 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:59:01 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:59:01 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:59:02 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:59:02 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:59:02 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:59:02 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:59:02 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:59:02 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:59:02 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:59:02 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:59:02 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:59:02 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:59:02 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:59:02 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:59:02 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:59:02 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:59:02 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:59:02 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:59:02 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:59:02 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:59:02 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:59:02 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:59:02 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:59:02 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:59:02 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:59:02 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:02 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:59:02 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:59:02 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:59:02 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:59:02 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:02 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:59:02 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:59:02 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:59:02 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:59:02 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:02 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:59:02 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:59:02 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:59:02 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:59:02 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:02 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:59:02 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:59:02 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:59:02 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:59:02 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:02 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:59:02 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:59:02 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:59:02 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:59:02 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:02 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:59:02 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:59:02 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:59:02 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:59:02 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:59:02 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:59:02 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:59:02 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:59:02 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:59:02 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:59:02 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:59:02 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:59:02 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:59:02 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:59:02 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:59:02 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:59:02 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:59:02 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:59:02 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:59:02 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:59:02 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:59:02 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:59:02 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:59:02 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:59:02 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:59:02 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:59:02 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:59:02 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:59:02 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:59:02 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:59:02 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:59:02 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:59:02 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:59:02 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:59:02 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:59:02 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:59:02 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:59:02 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:59:02 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:59:02 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:59:02 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:59:02 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:59:02 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:59:02 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:59:02 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:59:02 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:59:02 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:59:02 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:59:02 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:59:02 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:59:02 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:59:02 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:59:02 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:59:02 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:02 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:02 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:02 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:02 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:02 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:02 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:02 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:02 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:59:03 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: ffb00ad2-392a-422c-a5c9-6c63e4ec9f8e (<unnamed>)
2017-12-02 16:59:03 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:59:03 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:59:03 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:59:03 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:59:03 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:59:03 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:59:03 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:59:03 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:59:03 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:59:03 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:59:03 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:59:03 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:59:03 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:59:03 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:59:03 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:59:03 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:59:03 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:59:03 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:59:03 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:59:03 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:59:03 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:59:03 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:59:03 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:59:03 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:59:03 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:59:03 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:59:03 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:59:03 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:59:03 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:59:03 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:59:03 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:59:03 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:59:03 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:59:03 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 12
2017-12-02 16:59:03 INFO  AddressService:21 - Address saved successfully with address_id :: 12
2017-12-02 16:59:03 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:59:03 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:59:03 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=12}
2017-12-02 16:59:03 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:59:03 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:59:03 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:59:03 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:59:03 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:59:03 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#4]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#4]
2017-12-02 16:59:03 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#4
2017-12-02 16:59:03 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:59:03 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:59:03 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=12}
2017-12-02 16:59:03 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:59:03 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:59:03 INFO  MainClass:35 - address saved with address_id = 4
2017-12-02 16:59:03 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:59:03 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:59:03 DEBUG SessionImpl:972 - Initializing proxy: [com.example.jpa.se.entity.Address#11]
2017-12-02 16:59:03 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:59:03 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:59:03 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#11]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#11]
2017-12-02 16:59:03 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#11
2017-12-02 16:59:03 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
2017-12-02 16:59:03 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:59:03 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:59:03 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=11}
2017-12-02 16:59:03 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=12}
2017-12-02 16:59:03 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:59:03 DEBUG SQL:109 - 
    delete 
    from
        address 
    where
        address_id=?
2017-12-02 16:59:03 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:59:03 DEBUG QueryTranslatorImpl:294 - parse() - HQL: SELECT a FROM com.example.jpa.se.entity.Address a
2017-12-02 16:59:03 DEBUG QueryTranslatorImpl:312 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'example'
       |     |  |  |  |  \-[IDENT] Node: 'jpa'
       |     |  |  |  \-[IDENT] Node: 'se'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Address'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

2017-12-02 16:59:03 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 16:59:03 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
2017-12-02 16:59:03 DEBUG FromElement:158 - FromClause{level=1} : com.example.jpa.se.entity.Address (a) -> address0_
2017-12-02 16:59:03 DEBUG FromReferenceNode:77 - Resolved : a -> address0_.address_id
2017-12-02 16:59:03 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
2017-12-02 16:59:03 DEBUG HqlSqlWalker:665 - processQuery() :  ( SELECT ( {select clause} address0_.address_id ) ( FromClause{level=1} address address0_ ) )
2017-12-02 16:59:03 DEBUG JoinProcessor:187 - Using FROM fragment [address address0_]
2017-12-02 16:59:03 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
2017-12-02 16:59:03 DEBUG QueryTranslatorImpl:281 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (address)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'address0_.address_id as address_1_0_' {alias=a, className=com.example.jpa.se.entity.Address, tableAlias=address0_}
    |  \-[SQL_TOKEN] SqlFragment: 'address0_.city as city2_0_, address0_.country as country3_0_, address0_.postcode as postcode4_0_, address0_.province as province5_0_, address0_.street as street6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[address0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'address address0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=address,tableAlias=address0_,origin=null,columns={,className=com.example.jpa.se.entity.Address}}

2017-12-02 16:59:03 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 16:59:03 DEBUG QueryTranslatorImpl:263 - HQL: SELECT a FROM com.example.jpa.se.entity.Address a
2017-12-02 16:59:03 DEBUG QueryTranslatorImpl:264 - SQL: select address0_.address_id as address_1_0_, address0_.city as city2_0_, address0_.country as country3_0_, address0_.postcode as postcode4_0_, address0_.province as province5_0_, address0_.street as street6_0_ from address address0_
2017-12-02 16:59:03 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 16:59:03 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_,
        address0_.city as city2_0_,
        address0_.country as country3_0_,
        address0_.postcode as postcode4_0_,
        address0_.province as province5_0_,
        address0_.street as street6_0_ 
    from
        address address0_
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 0
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#1]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 1
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#2]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 2
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#3]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 3
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#6]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 4
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#7]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 5
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#8]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 6
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#4]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 7
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#9]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 8
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#10]
2017-12-02 16:59:03 DEBUG Loader:951 - Result set row: 9
2017-12-02 16:59:03 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#12]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#1]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#1]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#2]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#2]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#3]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#3]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#6]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#6]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#7]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#7]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#8]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#8]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#9]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#9]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#10]
2017-12-02 16:59:03 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#10]
2017-12-02 16:59:53 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 16:59:53 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 16:59:53 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 16:59:53 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 16:59:53 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 16:59:53 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 16:59:54 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 16:59:54 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 16:59:54 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 16:59:54 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 16:59:54 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 16:59:54 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 16:59:54 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 16:59:54 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 16:59:54 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 16:59:54 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 16:59:54 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 16:59:54 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 16:59:54 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 16:59:54 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 16:59:54 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 16:59:54 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 16:59:54 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 16:59:54 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 16:59:54 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 16:59:54 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 16:59:54 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 16:59:54 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 16:59:54 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 16:59:54 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 16:59:54 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 16:59:54 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 16:59:55 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:59:55 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:59:55 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 16:59:55 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 16:59:55 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 16:59:55 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 16:59:55 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 16:59:55 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:55 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 16:59:55 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 16:59:55 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 16:59:55 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 16:59:55 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:55 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 16:59:55 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 16:59:55 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 16:59:55 DEBUG PropertyBinder:271 - Building property city
2017-12-02 16:59:55 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:55 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 16:59:55 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 16:59:55 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 16:59:55 DEBUG PropertyBinder:271 - Building property country
2017-12-02 16:59:55 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:55 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 16:59:55 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 16:59:55 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 16:59:55 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 16:59:55 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:55 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 16:59:55 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 16:59:55 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 16:59:55 DEBUG PropertyBinder:271 - Building property province
2017-12-02 16:59:55 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 16:59:55 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 16:59:55 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 16:59:55 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 16:59:55 DEBUG PropertyBinder:271 - Building property street
2017-12-02 16:59:55 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 16:59:55 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 16:59:55 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 16:59:55 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 16:59:55 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 16:59:55 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 16:59:55 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:59:55 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:59:55 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:59:55 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:59:55 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:59:55 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:59:55 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:59:55 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:59:55 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 16:59:55 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 16:59:55 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 16:59:55 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 16:59:55 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 16:59:55 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 16:59:55 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 16:59:55 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 16:59:55 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 16:59:55 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 16:59:55 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 16:59:55 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 16:59:55 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 16:59:55 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 16:59:55 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 16:59:55 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 16:59:55 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 16:59:55 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 16:59:55 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 16:59:55 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 16:59:55 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 16:59:55 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 16:59:55 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 16:59:55 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 16:59:55 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 16:59:55 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 16:59:55 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 16:59:55 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 16:59:55 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:59:55 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 16:59:55 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 16:59:55 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 16:59:55 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 16:59:55 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 16:59:55 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 16:59:55 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15713d56]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26ceffa8]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8c9a05]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c2375a9]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6692f]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9c13b5]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27216cd]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8576fa0]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67545b57]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:55 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f354bcf]
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 16:59:55 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 16:59:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 16:59:55 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 16:59:55 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 16:59:55 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:55 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:55 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 16:59:55 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@484094a5
2017-12-02 16:59:55 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: 52fd45f9-d545-4a95-aa3d-35782b6db72d (<unnamed>)
2017-12-02 16:59:55 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 16:59:55 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 16:59:55 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 16:59:55 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 16:59:55 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 16:59:55 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 16:59:55 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 16:59:55 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 16:59:55 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 16:59:55 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 16:59:55 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 16:59:55 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 16:59:55 DEBUG Configuration:1708 - Processing association property references
2017-12-02 16:59:55 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 16:59:55 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 16:59:55 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 16:59:55 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 16:59:55 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 16:59:55 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 16:59:55 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 16:59:55 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 16:59:55 DEBUG NamedQueryRepository:155 - Checking 0 named HQL queries
2017-12-02 16:59:55 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 16:59:55 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 16:59:55 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 16:59:55 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@32f232a5
2017-12-02 16:59:55 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 16:59:55 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:59:55 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 16:59:55 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 16:59:55 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:59:55 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 16:59:55 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 16:59:55 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 13
2017-12-02 16:59:55 INFO  AddressService:21 - Address saved successfully with address_id :: 13
2017-12-02 16:59:55 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:59:55 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:59:55 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=13}
2017-12-02 16:59:55 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:59:55 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:59:55 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:59:55 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:59:55 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:59:55 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#4]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#4]
2017-12-02 16:59:55 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#4
2017-12-02 16:59:55 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:59:55 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:59:55 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:59:55 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=13}
2017-12-02 16:59:55 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:59:55 INFO  MainClass:35 - address saved with address_id = 4
2017-12-02 16:59:55 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 16:59:55 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 16:59:55 DEBUG SessionImpl:972 - Initializing proxy: [com.example.jpa.se.entity.Address#12]
2017-12-02 16:59:55 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 16:59:55 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 16:59:55 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#12]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#12]
2017-12-02 16:59:55 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#12
2017-12-02 16:59:55 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
2017-12-02 16:59:55 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 16:59:55 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 16:59:55 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 16:59:55 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=12}
2017-12-02 16:59:55 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=13}
2017-12-02 16:59:55 DEBUG SQL:109 - 
    delete 
    from
        address 
    where
        address_id=?
2017-12-02 16:59:55 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 16:59:55 DEBUG QueryTranslatorImpl:294 - parse() - HQL: SELECT a FROM com.example.jpa.se.entity.Address a
2017-12-02 16:59:55 DEBUG QueryTranslatorImpl:312 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'example'
       |     |  |  |  |  \-[IDENT] Node: 'jpa'
       |     |  |  |  \-[IDENT] Node: 'se'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Address'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

2017-12-02 16:59:55 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 16:59:55 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
2017-12-02 16:59:55 DEBUG FromElement:158 - FromClause{level=1} : com.example.jpa.se.entity.Address (a) -> address0_
2017-12-02 16:59:55 DEBUG FromReferenceNode:77 - Resolved : a -> address0_.address_id
2017-12-02 16:59:55 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
2017-12-02 16:59:55 DEBUG HqlSqlWalker:665 - processQuery() :  ( SELECT ( {select clause} address0_.address_id ) ( FromClause{level=1} address address0_ ) )
2017-12-02 16:59:55 DEBUG JoinProcessor:187 - Using FROM fragment [address address0_]
2017-12-02 16:59:55 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
2017-12-02 16:59:55 DEBUG QueryTranslatorImpl:281 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (address)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'address0_.address_id as address_1_0_' {alias=a, className=com.example.jpa.se.entity.Address, tableAlias=address0_}
    |  \-[SQL_TOKEN] SqlFragment: 'address0_.city as city2_0_, address0_.country as country3_0_, address0_.postcode as postcode4_0_, address0_.province as province5_0_, address0_.street as street6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[address0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'address address0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=address,tableAlias=address0_,origin=null,columns={,className=com.example.jpa.se.entity.Address}}

2017-12-02 16:59:55 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 16:59:55 DEBUG QueryTranslatorImpl:263 - HQL: SELECT a FROM com.example.jpa.se.entity.Address a
2017-12-02 16:59:55 DEBUG QueryTranslatorImpl:264 - SQL: select address0_.address_id as address_1_0_, address0_.city as city2_0_, address0_.country as country3_0_, address0_.postcode as postcode4_0_, address0_.province as province5_0_, address0_.street as street6_0_ from address address0_
2017-12-02 16:59:55 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 16:59:55 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_,
        address0_.city as city2_0_,
        address0_.country as country3_0_,
        address0_.postcode as postcode4_0_,
        address0_.province as province5_0_,
        address0_.street as street6_0_ 
    from
        address address0_
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 0
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#1]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 1
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#2]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 2
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#3]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 3
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#6]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 4
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#7]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 5
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#8]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 6
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#4]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 7
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#9]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 8
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#10]
2017-12-02 16:59:55 DEBUG Loader:951 - Result set row: 9
2017-12-02 16:59:55 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#13]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#1]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#1]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#2]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#2]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#3]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#3]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#6]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#6]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#7]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#7]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#8]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#8]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#9]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#9]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#10]
2017-12-02 16:59:55 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#10]
2017-12-02 17:05:05 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 17:05:05 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 17:05:05 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 17:05:05 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 17:05:05 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 17:05:05 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 17:05:05 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 17:05:05 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 17:05:05 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 17:05:05 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 17:05:05 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 17:05:05 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 17:05:05 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 17:05:05 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 17:05:05 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 17:05:05 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 17:05:05 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 17:05:05 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 17:05:05 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 17:05:05 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 17:05:05 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 17:05:06 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 17:05:06 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 17:05:06 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 17:05:06 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 17:05:06 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 17:05:06 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 17:05:06 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 17:05:06 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 17:05:06 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 17:05:06 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 17:05:06 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 17:05:06 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 17:05:06 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 17:05:06 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 17:05:06 DEBUG QueryBinder:93 - Binding named query: Address.findAll => SELECT a FROM Address
2017-12-02 17:05:06 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 17:05:06 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 17:05:06 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 17:05:06 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 17:05:06 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:06 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 17:05:06 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 17:05:06 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 17:05:06 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 17:05:06 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:06 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 17:05:06 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 17:05:06 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 17:05:06 DEBUG PropertyBinder:271 - Building property city
2017-12-02 17:05:06 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:06 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 17:05:06 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 17:05:06 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 17:05:06 DEBUG PropertyBinder:271 - Building property country
2017-12-02 17:05:06 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:06 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 17:05:06 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 17:05:06 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 17:05:06 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 17:05:06 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:06 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 17:05:06 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 17:05:06 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 17:05:06 DEBUG PropertyBinder:271 - Building property province
2017-12-02 17:05:06 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:06 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 17:05:06 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 17:05:06 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 17:05:06 DEBUG PropertyBinder:271 - Building property street
2017-12-02 17:05:06 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 17:05:06 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 17:05:06 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 17:05:06 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 17:05:06 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 17:05:06 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 17:05:06 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 17:05:06 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 17:05:06 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 17:05:06 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 17:05:06 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 17:05:06 DEBUG Configuration:1708 - Processing association property references
2017-12-02 17:05:06 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 17:05:06 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 17:05:06 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 17:05:06 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 17:05:06 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 17:05:06 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 17:05:06 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 17:05:06 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 17:05:06 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 17:05:06 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 17:05:06 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 17:05:06 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 17:05:06 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 17:05:06 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 17:05:06 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 17:05:06 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 17:05:06 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 17:05:06 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 17:05:06 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 17:05:06 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 17:05:06 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 17:05:06 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 17:05:06 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 17:05:06 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 17:05:06 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 17:05:06 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 17:05:06 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 17:05:06 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 17:05:06 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 17:05:06 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 17:05:06 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 17:05:06 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 17:05:06 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 17:05:06 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 17:05:06 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 17:05:06 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 17:05:06 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 17:05:06 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a5cabc]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@558bdf1f]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7582ff54]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2c1385]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3daf7722]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74589991]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4716be8b]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f67b837]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af9fcb2]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7efaad5a]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:06 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca30bc1]
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:06 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:06 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:06 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:06 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:06 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:06 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:06 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7f0d96f2
2017-12-02 17:05:06 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: f7cc559c-0638-4929-920f-00893add259c (<unnamed>)
2017-12-02 17:05:06 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 17:05:06 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 17:05:06 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 17:05:06 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 17:05:06 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 17:05:06 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 17:05:06 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 17:05:06 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 17:05:06 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 17:05:06 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 17:05:06 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 17:05:06 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 17:05:06 DEBUG Configuration:1708 - Processing association property references
2017-12-02 17:05:06 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 17:05:06 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 17:05:06 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 17:05:06 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 17:05:06 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 17:05:06 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 17:05:06 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 17:05:06 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 17:05:06 DEBUG NamedQueryRepository:155 - Checking 1 named HQL queries
2017-12-02 17:05:06 DEBUG NamedQueryRepository:159 - Checking named query: Address.findAll
2017-12-02 17:05:06 DEBUG QueryTranslatorImpl:294 - parse() - HQL: SELECT a FROM com.example.jpa.se.entity.Address
2017-12-02 17:05:06 DEBUG QueryTranslatorImpl:312 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     \-[DOT] Node: '.'
       |        +-[DOT] Node: '.'
       |        |  +-[DOT] Node: '.'
       |        |  |  +-[DOT] Node: '.'
       |        |  |  |  +-[DOT] Node: '.'
       |        |  |  |  |  +-[IDENT] Node: 'com'
       |        |  |  |  |  \-[IDENT] Node: 'example'
       |        |  |  |  \-[IDENT] Node: 'jpa'
       |        |  |  \-[IDENT] Node: 'se'
       |        |  \-[IDENT] Node: 'entity'
       |        \-[IDENT] Node: 'Address'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

2017-12-02 17:05:06 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 17:05:06 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
2017-12-02 17:05:06 DEBUG FromElement:158 - FromClause{level=1} : com.example.jpa.se.entity.Address (<no alias>) -> address0_
2017-12-02 17:05:06 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
2017-12-02 17:05:06 DEBUG HqlSqlWalker:665 - processQuery() :  ( SELECT ( {select clause} a ) ( FromClause{level=1} address address0_ ) )
2017-12-02 17:05:06 DEBUG HibernatePersistenceProvider:82 - Unable to build entity manager factory
java.lang.IllegalStateException: No data type for node: org.hibernate.hql.internal.ast.tree.IdentNode 
 \-[IDENT] IdentNode: 'a' {originalText=a}

	at org.hibernate.hql.internal.ast.tree.SelectClause.initializeExplicitSelectClause(SelectClause.java:174)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.useSelectClause(HqlSqlWalker.java:924)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:692)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:665)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:249)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:206)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:158)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:126)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:88)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:167)
	at org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:161)
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1090)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:536)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1857)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:850)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:843)
	at org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.withTccl(ClassLoaderServiceImpl.java:398)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:842)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:75)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at com.example.jpa.se.service.PersistenceManager.createEntityManager(PersistenceManager.java:14)
	at com.example.jpa.se.main.MainClass.main(MainClass.java:20)
2017-12-02 17:05:51 DEBUG logging:55 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-12-02 17:05:51 DEBUG ClassLoaderServiceImpl:137 - Incoming config yielded no classloaders; adding standard SE ones
2017-12-02 17:05:51 DEBUG HibernatePersistenceProvider:104 - Located and parsed 1 persistence units; checking each
2017-12-02 17:05:51 DEBUG HibernatePersistenceProvider:112 - Checking persistence-unit [name=JPADB, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [JPADB]
2017-12-02 17:05:51 DEBUG ProviderChecker:106 - Persistence-unit [JPADB] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2017-12-02 17:05:51 DEBUG LogHelper:117 - PersistenceUnitInfo [
	name: JPADB
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		com.example.jpa.se.entity.Address]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.postgresql.Driver
		javax.persistence.jdbc.password: asdf1234
		javax.persistence.jdbc.url: jdbc:postgresql://localhost:5432/jpademo
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: postgres]
2017-12-02 17:05:51 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-12-02 17:05:51 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-12-02 17:05:51 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-12-02 17:05:51 DEBUG IntegratorServiceImpl:63 - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2017-12-02 17:05:51 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2017-12-02 17:05:51 DEBUG StrategySelectorImpl:79 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2017-12-02 17:05:51 INFO  Version:54 - HHH000412: Hibernate Core {4.3.6.Final}
2017-12-02 17:05:51 INFO  Environment:239 - HHH000206: hibernate.properties not found
2017-12-02 17:05:51 INFO  Environment:346 - HHH000021: Bytecode provider name : javassist
2017-12-02 17:05:51 DEBUG ServiceBinding:85 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a74868d
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb64261
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7276c8cd
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@150c158
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda0940
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@78186a70
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78186a70
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@548ad73b
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2f0a87b3
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fd66ad3
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fb0d3ed
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@103f852
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1da51a35
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@768b970c
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@768b970c
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@134593bf
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7dc222ae
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@382db087
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@382db087
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@2698dc7
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2698dc7
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48a242ce
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ad282e0
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e955596
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dbd940d
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9f5c0d
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@530612ba
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70a9f84e
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40f08448
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7181ae3f
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cc7b4de
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd8682
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@290dbf45
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@11c20519
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@11c20519
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@11c20519
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@701fc37a
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@76329302
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@11e21d0e
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1176dcec
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@6a79c292
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@80ec1f8
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15d9bc04
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c0a50da
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b794e2
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64d2d351
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2c72c2
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@971d0d8
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@62e136d3
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@448ff1a8
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44a664f2
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f9fcf7f
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2357d90a
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6328d34a
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@145eaa29
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15bb6bea
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8b96fde
2017-12-02 17:05:51 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d2e5f00
2017-12-02 17:05:51 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-12-02 17:05:51 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-12-02 17:05:51 DEBUG Configuration:1841 - Preparing to build session factory with filters : {}
2017-12-02 17:05:51 WARN  DriverManagerConnectionProviderImpl:93 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2017-12-02 17:05:51 INFO  DriverManagerConnectionProviderImpl:166 - HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/jpademo]
2017-12-02 17:05:51 INFO  DriverManagerConnectionProviderImpl:172 - HHH000046: Connection properties: {user=postgres, password=asdf1234}
2017-12-02 17:05:51 INFO  DriverManagerConnectionProviderImpl:180 - HHH000006: Autocommit mode: false
2017-12-02 17:05:51 INFO  DriverManagerConnectionProviderImpl:102 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-12-02 17:05:51 DEBUG DriverManagerConnectionProviderImpl:104 - Initializing Connection pool with 1 Connections
2017-12-02 17:05:51 DEBUG JdbcServicesImpl:128 - Database ->
       name : PostgreSQL
    version : 9.5.10
      major : 9
      minor : 5
2017-12-02 17:05:51 DEBUG JdbcServicesImpl:139 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.1 JDBC4 (build 901)
      major : 9
      minor : 1
2017-12-02 17:05:51 DEBUG JdbcServicesImpl:150 - JDBC version : 4.0
2017-12-02 17:05:51 DEBUG StandardRefCursorSupport:187 - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2017-12-02 17:05:52 INFO  Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2017-12-02 17:05:52 INFO  LobCreatorBuilder:123 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2017-12-02 17:05:52 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 17:05:52 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 17:05:52 DEBUG AnnotationBinder:601 - Binding entity from annotated class: com.example.jpa.se.entity.Address
2017-12-02 17:05:52 DEBUG QueryBinder:93 - Binding named query: Address.findAll => SELECT a FROM Address as a
2017-12-02 17:05:52 DEBUG Ejb3Column:239 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2017-12-02 17:05:52 DEBUG AnnotationBinder:1185 - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2017-12-02 17:05:52 DEBUG EntityBinder:397 - Import with entity name Address
2017-12-02 17:05:52 DEBUG EntityBinder:586 - Bind entity com.example.jpa.se.entity.Address on table address
2017-12-02 17:05:52 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:52 DEBUG PropertyBinder:185 - MetadataSourceProcessor property addressId with lazy=false
2017-12-02 17:05:52 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:addressId]
2017-12-02 17:05:52 DEBUG SimpleValueBinder:385 - building SimpleValue for addressId
2017-12-02 17:05:52 DEBUG PropertyBinder:271 - Building property addressId
2017-12-02 17:05:52 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:52 DEBUG PropertyBinder:185 - MetadataSourceProcessor property city with lazy=false
2017-12-02 17:05:52 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:city]
2017-12-02 17:05:52 DEBUG SimpleValueBinder:385 - building SimpleValue for city
2017-12-02 17:05:52 DEBUG PropertyBinder:271 - Building property city
2017-12-02 17:05:52 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=country, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:52 DEBUG PropertyBinder:185 - MetadataSourceProcessor property country with lazy=false
2017-12-02 17:05:52 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:country]
2017-12-02 17:05:52 DEBUG SimpleValueBinder:385 - building SimpleValue for country
2017-12-02 17:05:52 DEBUG PropertyBinder:271 - Building property country
2017-12-02 17:05:52 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:52 DEBUG PropertyBinder:185 - MetadataSourceProcessor property postcode with lazy=false
2017-12-02 17:05:52 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:postcode]
2017-12-02 17:05:52 DEBUG SimpleValueBinder:385 - building SimpleValue for postcode
2017-12-02 17:05:52 DEBUG PropertyBinder:271 - Building property postcode
2017-12-02 17:05:52 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=province, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:52 DEBUG PropertyBinder:185 - MetadataSourceProcessor property province with lazy=false
2017-12-02 17:05:52 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:province]
2017-12-02 17:05:52 DEBUG SimpleValueBinder:385 - building SimpleValue for province
2017-12-02 17:05:52 DEBUG PropertyBinder:271 - Building property province
2017-12-02 17:05:52 DEBUG Ejb3Column:239 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=street, insertable=true, updatable=true, unique=false}
2017-12-02 17:05:52 DEBUG PropertyBinder:185 - MetadataSourceProcessor property street with lazy=false
2017-12-02 17:05:52 DEBUG AbstractPropertyHolder:106 - Attempting to locate auto-apply AttributeConverter for property [com.example.jpa.se.entity.Address:street]
2017-12-02 17:05:52 DEBUG SimpleValueBinder:385 - building SimpleValue for street
2017-12-02 17:05:52 DEBUG PropertyBinder:271 - Building property street
2017-12-02 17:05:52 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for addressId
2017-12-02 17:05:52 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for city
2017-12-02 17:05:52 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for country
2017-12-02 17:05:52 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for postcode
2017-12-02 17:05:52 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for province
2017-12-02 17:05:52 DEBUG SimpleValueBinder:422 - Starting fillSimpleValue for street
2017-12-02 17:05:52 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 17:05:52 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 17:05:52 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 17:05:52 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 17:05:52 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 17:05:52 DEBUG Configuration:1708 - Processing association property references
2017-12-02 17:05:52 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 17:05:52 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 17:05:52 DEBUG JtaPlatformInitiator:59 - No JtaPlatform was specified, checking resolver
2017-12-02 17:05:52 DEBUG JtaPlatformResolverInitiator:50 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-12-02 17:05:52 DEBUG StandardJtaPlatformResolver:118 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-12-02 17:05:52 DEBUG SettingsFactory:122 - Automatic flush during beforeCompletion(): disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:128 - Automatic session close at end of transaction: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:139 - JDBC batch size: 15
2017-12-02 17:05:52 DEBUG SettingsFactory:145 - JDBC batch updates for versioned data: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:155 - Scrollable result sets: enabled
2017-12-02 17:05:52 DEBUG SettingsFactory:161 - Wrap result sets: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:167 - JDBC3 getGeneratedKeys(): enabled
2017-12-02 17:05:52 DEBUG SettingsFactory:179 - multi-tenancy strategy : NONE
2017-12-02 17:05:52 DEBUG SettingsFactory:185 - Connection release mode: auto
2017-12-02 17:05:52 DEBUG SettingsFactory:207 - Using BatchFetchStyle : LEGACY
2017-12-02 17:05:52 DEBUG SettingsFactory:232 - Default batch fetch size: 1
2017-12-02 17:05:52 DEBUG SettingsFactory:238 - Generate SQL with comments: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:244 - Order SQL updates by primary key: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:250 - Order SQL inserts for batching: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:258 - Default null ordering: none
2017-12-02 17:05:52 DEBUG SettingsFactory:501 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2017-12-02 17:05:52 INFO  ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
2017-12-02 17:05:52 DEBUG SettingsFactory:268 - Query language substitutions: {}
2017-12-02 17:05:52 DEBUG SettingsFactory:274 - JPA-QL strict compliance: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:282 - Second-level cache: enabled
2017-12-02 17:05:52 DEBUG SettingsFactory:288 - Query cache: disabled
2017-12-02 17:05:52 DEBUG RegionFactoryInitiator:105 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-12-02 17:05:52 DEBUG SettingsFactory:301 - Optimize cache for minimal puts: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:316 - Structured second-level cache entries: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:326 - Second-level cache direct-reference entries: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:332 - Automatic eviction of collection cache: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:340 - Statistics: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:346 - Deleted entity synthetic identifier rollback: disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:373 - Default entity-mode: pojo
2017-12-02 17:05:52 DEBUG SettingsFactory:379 - Named query checking : enabled
2017-12-02 17:05:52 DEBUG SettingsFactory:385 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-12-02 17:05:52 DEBUG SettingsFactory:403 - Allow initialization of lazy state outside session : : disabled
2017-12-02 17:05:52 DEBUG SettingsFactory:413 - JTA Track by Thread: enabled
2017-12-02 17:05:52 DEBUG SessionFactoryImpl:229 - Building session factory
2017-12-02 17:05:52 DEBUG SessionFactoryImpl:285 - Session factory constructed with filter configurations : {}
2017-12-02 17:05:52 DEBUG SessionFactoryImpl:286 - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.151-b12, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/lenovo/eclipse-workspace/JPAInJavaSE, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=postgres, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=asdf1234, os.name=Linux, sun.jnu.encoding=UTF-8, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/jpademo, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, javax.persistence.jdbc.driver=org.postgresql.Driver, hibernate.ejb.persistenceUnitName=JPADB, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.4.0-101-generic, user.home=/home/lenovo, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, hibernate.format_sql=true, java.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/home/lenovo/eclipse-workspace/JPAInJavaSE/target/classes:/home/lenovo/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/lenovo/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/lenovo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.6.Final/hibernate-entitymanager-4.3.6.Final.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar:/home/lenovo/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/lenovo/.m2/repository/org/hibernate/hibernate-core/4.3.6.Final/hibernate-core-4.3.6.Final.jar:/home/lenovo/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/lenovo/.m2/repository/org/jboss/jandex/1.1.0.Final/jandex-1.1.0.Final.jar:/home/lenovo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/lenovo/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar:/home/lenovo/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.5.Final/hibernate-commons-annotations-4.0.5.Final.jar:/home/lenovo/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/lenovo/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/lenovo/.m2/repository/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/home/lenovo/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, user.name=lenovo, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=com.example.jpa.se.main.MainClass, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2017-12-02 17:05:52 DEBUG TypeSafeActivator:107 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-12-02 17:05:52 DEBUG JaccIntegrator:90 - Skipping JACC integration as it was not enabled
2017-12-02 17:05:52 DEBUG CascadeStyles:285 - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2017-12-02 17:05:52 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 17:05:52 DEBUG AbstractEntityPersister:3676 - Static SQL for entity: com.example.jpa.se.entity.Address
2017-12-02 17:05:52 DEBUG AbstractEntityPersister:3681 -  Version select: select address_id from address where address_id =?
2017-12-02 17:05:52 DEBUG AbstractEntityPersister:3684 -  Snapshot select: select address_.address_id, address_.city as city2_0_, address_.country as country3_0_, address_.postcode as postcode4_0_, address_.province as province5_0_, address_.street as street6_0_ from address address_ where address_.address_id=?
2017-12-02 17:05:52 DEBUG AbstractEntityPersister:3687 -  Insert 0: insert into address (city, country, postcode, province, street, address_id) values (?, ?, ?, ?, ?, ?)
2017-12-02 17:05:52 DEBUG AbstractEntityPersister:3688 -  Update 0: update address set city=?, country=?, postcode=?, province=?, street=? where address_id=?
2017-12-02 17:05:52 DEBUG AbstractEntityPersister:3689 -  Delete 0: delete from address where address_id=?
2017-12-02 17:05:52 DEBUG AbstractEntityPersister:3692 -  Identity insert: insert into address (city, country, postcode, province, street) values (?, ?, ?, ?, ?)
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a5cabc]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@558bdf1f]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7582ff54]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c2c1385]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3daf7722]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74589991]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4716be8b]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for share
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f67b837]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af9fcb2]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=? for update nowait 
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7efaad5a]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:52 DEBUG QuerySpacesImpl:192 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca30bc1]
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : city
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : country
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : postcode
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : province
2017-12-02 17:05:52 DEBUG MetamodelGraphWalker:154 - Visiting attribute path : street
2017-12-02 17:05:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:94 - Building LoadPlan...
2017-12-02 17:05:52 DEBUG LoadQueryJoinAndFetchProcessor:111 - processing queryspace <gen:0>
2017-12-02 17:05:52 DEBUG LoadPlanTreePrinter:72 - LoadPlan(entity=com.example.jpa.se.entity.Address)
    - Returns
       - EntityReturnImpl(entity=com.example.jpa.se.entity.Address, querySpaceUid=<gen:0>, path=com.example.jpa.se.entity.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.jpa.se.entity.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

2017-12-02 17:05:52 DEBUG EntityLoader:146 - Static select for entity com.example.jpa.se.entity.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:52 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:52 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.example.jpa.se.entity.Address: select address0_.address_id as address_1_0_0_, address0_.city as city2_0_0_, address0_.country as country3_0_0_, address0_.postcode as postcode4_0_0_, address0_.province as province5_0_0_, address0_.street as street6_0_0_ from address address0_ where address0_.address_id=?
2017-12-02 17:05:52 DEBUG SessionFactoryRegistry:67 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7f0d96f2
2017-12-02 17:05:52 DEBUG SessionFactoryRegistry:89 - Registering SessionFactory: 5a442566-809c-4c9a-b31f-6d7ae1de1a59 (<unnamed>)
2017-12-02 17:05:52 DEBUG SessionFactoryRegistry:96 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-12-02 17:05:52 DEBUG SessionFactoryImpl:505 - Instantiated session factory
2017-12-02 17:05:52 INFO  SchemaUpdate:182 - HHH000228: Running hbm2ddl schema update
2017-12-02 17:05:52 INFO  SchemaUpdate:193 - HHH000102: Fetching database metadata
2017-12-02 17:05:52 INFO  SchemaUpdate:205 - HHH000396: Updating schema
2017-12-02 17:05:52 DEBUG Configuration:3748 - Processing hbm.xml files
2017-12-02 17:05:52 DEBUG Configuration:3778 - Process annotated classes
2017-12-02 17:05:52 DEBUG Configuration:1482 - Processing fk mappings (*ToOne and JoinedSubclass)
2017-12-02 17:05:52 DEBUG Configuration:1687 - Processing extends queue
2017-12-02 17:05:52 DEBUG Configuration:1745 - Processing extends queue
2017-12-02 17:05:52 DEBUG Configuration:1690 - Processing collection mappings
2017-12-02 17:05:52 DEBUG Configuration:1700 - Processing native query and ResultSetMapping mappings
2017-12-02 17:05:52 DEBUG Configuration:1708 - Processing association property references
2017-12-02 17:05:52 DEBUG Configuration:1730 - Creating tables' unique integer identifiers
2017-12-02 17:05:52 DEBUG Configuration:1731 - Processing foreign key constraints
2017-12-02 17:05:52 INFO  TableMetadata:66 - HHH000261: Table found: public.address
2017-12-02 17:05:52 INFO  TableMetadata:67 - HHH000037: Columns: [country, province, city, street, address_id, postcode]
2017-12-02 17:05:52 INFO  TableMetadata:69 - HHH000108: Foreign keys: []
2017-12-02 17:05:52 INFO  TableMetadata:70 - HHH000126: Indexes: [address_pkey]
2017-12-02 17:05:52 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
2017-12-02 17:05:52 INFO  SchemaUpdate:242 - HHH000232: Schema update complete
2017-12-02 17:05:52 DEBUG NamedQueryRepository:155 - Checking 1 named HQL queries
2017-12-02 17:05:52 DEBUG NamedQueryRepository:159 - Checking named query: Address.findAll
2017-12-02 17:05:52 DEBUG QueryTranslatorImpl:294 - parse() - HQL: SELECT a FROM com.example.jpa.se.entity.Address as a
2017-12-02 17:05:52 DEBUG QueryTranslatorImpl:312 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'example'
       |     |  |  |  |  \-[IDENT] Node: 'jpa'
       |     |  |  |  \-[IDENT] Node: 'se'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Address'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

2017-12-02 17:05:52 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 17:05:52 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
2017-12-02 17:05:52 DEBUG FromElement:158 - FromClause{level=1} : com.example.jpa.se.entity.Address (a) -> address0_
2017-12-02 17:05:52 DEBUG FromReferenceNode:77 - Resolved : a -> address0_.address_id
2017-12-02 17:05:52 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
2017-12-02 17:05:52 DEBUG HqlSqlWalker:665 - processQuery() :  ( SELECT ( {select clause} address0_.address_id ) ( FromClause{level=1} address address0_ ) )
2017-12-02 17:05:52 DEBUG JoinProcessor:187 - Using FROM fragment [address address0_]
2017-12-02 17:05:52 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
2017-12-02 17:05:52 DEBUG QueryTranslatorImpl:281 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (address)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'address0_.address_id as address_1_0_' {alias=a, className=com.example.jpa.se.entity.Address, tableAlias=address0_}
    |  \-[SQL_TOKEN] SqlFragment: 'address0_.city as city2_0_, address0_.country as country3_0_, address0_.postcode as postcode4_0_, address0_.province as province5_0_, address0_.street as street6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[address0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'address address0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=address,tableAlias=address0_,origin=null,columns={,className=com.example.jpa.se.entity.Address}}

2017-12-02 17:05:52 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 17:05:52 DEBUG QueryTranslatorImpl:263 - HQL: SELECT a FROM com.example.jpa.se.entity.Address as a
2017-12-02 17:05:52 DEBUG QueryTranslatorImpl:264 - SQL: select address0_.address_id as address_1_0_, address0_.city as city2_0_, address0_.country as country3_0_, address0_.postcode as postcode4_0_, address0_.province as province5_0_, address0_.street as street6_0_ from address address0_
2017-12-02 17:05:52 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 17:05:52 DEBUG NamedQueryRepository:171 - Checking 0 named SQL queries
2017-12-02 17:05:52 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
2017-12-02 17:05:52 DEBUG JpaSchemaGenerator:115 - No actions specified; doing nothing
2017-12-02 17:05:52 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@34f7234e
2017-12-02 17:05:52 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: JPADB 
2017-12-02 17:05:52 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 17:05:52 DEBUG LogicalConnectionImpl:226 - Obtaining JDBC connection
2017-12-02 17:05:52 DEBUG LogicalConnectionImpl:232 - Obtained JDBC connection
2017-12-02 17:05:52 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 17:05:52 DEBUG ActionQueue:194 - Executing identity-insert immediately
2017-12-02 17:05:52 DEBUG SQL:109 - 
    insert 
    into
        address
        (city, country, postcode, province, street) 
    values
        (?, ?, ?, ?, ?)
2017-12-02 17:05:52 DEBUG IdentifierGeneratorHelper:94 - Natively generated identity: 14
2017-12-02 17:05:52 INFO  AddressService:21 - Address saved successfully with address_id :: 14
2017-12-02 17:05:52 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 17:05:52 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 17:05:52 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 17:05:52 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-12-02 17:05:52 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 17:05:52 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 17:05:52 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=14}
2017-12-02 17:05:53 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 17:05:53 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 17:05:53 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 17:05:53 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 17:05:53 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 17:05:53 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#4]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#4]
2017-12-02 17:05:53 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#4
2017-12-02 17:05:53 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 17:05:53 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 17:05:53 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 17:05:53 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2017-12-02 17:05:53 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 17:05:53 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 17:05:53 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 17:05:53 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=14}
2017-12-02 17:05:53 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 17:05:53 INFO  MainClass:35 - address saved with address_id = 4
2017-12-02 17:05:53 DEBUG AbstractTransactionImpl:160 - begin
2017-12-02 17:05:53 DEBUG JdbcTransaction:69 - initial autocommit status: false
2017-12-02 17:05:53 DEBUG SessionImpl:972 - Initializing proxy: [com.example.jpa.se.entity.Address#13]
2017-12-02 17:05:53 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.city as city2_0_0_,
        address0_.country as country3_0_0_,
        address0_.postcode as postcode4_0_0_,
        address0_.province as province5_0_0_,
        address0_.street as street6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
2017-12-02 17:05:53 DEBUG ResultSetProcessorImpl:127 - Starting ResultSet row #0
2017-12-02 17:05:53 DEBUG EntityReferenceInitializerImpl:142 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#13]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#13]
2017-12-02 17:05:53 DEBUG AbstractLoadPlanBasedEntityLoader:208 - Done entity load : com.example.jpa.se.entity.Address#13
2017-12-02 17:05:53 DEBUG AbstractTransactionImpl:175 - committing
2017-12-02 17:05:53 DEBUG AbstractFlushingEventListener:149 - Processing flush-time cascades
2017-12-02 17:05:53 DEBUG AbstractFlushingEventListener:189 - Dirty checking collections
2017-12-02 17:05:53 DEBUG AbstractFlushingEventListener:123 - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
2017-12-02 17:05:53 DEBUG AbstractFlushingEventListener:130 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-12-02 17:05:53 DEBUG EntityPrinter:114 - Listing entities:
2017-12-02 17:05:53 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Mumbai, street=Gajanan Hos. Soc., postcode=411033, addressId=4}
2017-12-02 17:05:53 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=13}
2017-12-02 17:05:53 DEBUG EntityPrinter:121 - com.example.jpa.se.entity.Address{country=India, province=asdasd, city=Pune, street=Gajanan Hos. Soc., postcode=411033, addressId=14}
2017-12-02 17:05:53 DEBUG SQL:109 - 
    delete 
    from
        address 
    where
        address_id=?
2017-12-02 17:05:53 DEBUG JdbcTransaction:113 - committed JDBC Connection
2017-12-02 17:05:53 DEBUG QueryTranslatorImpl:294 - parse() - HQL: SELECT a FROM com.example.jpa.se.entity.Address a
2017-12-02 17:05:53 DEBUG QueryTranslatorImpl:312 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  \-[IDENT] Node: 'example'
       |     |  |  |  |  \-[IDENT] Node: 'jpa'
       |     |  |  |  \-[IDENT] Node: 'se'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Address'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

2017-12-02 17:05:53 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 17:05:53 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
2017-12-02 17:05:53 DEBUG FromElement:158 - FromClause{level=1} : com.example.jpa.se.entity.Address (a) -> address0_
2017-12-02 17:05:53 DEBUG FromReferenceNode:77 - Resolved : a -> address0_.address_id
2017-12-02 17:05:53 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
2017-12-02 17:05:53 DEBUG HqlSqlWalker:665 - processQuery() :  ( SELECT ( {select clause} address0_.address_id ) ( FromClause{level=1} address address0_ ) )
2017-12-02 17:05:53 DEBUG JoinProcessor:187 - Using FROM fragment [address address0_]
2017-12-02 17:05:53 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
2017-12-02 17:05:53 DEBUG QueryTranslatorImpl:281 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (address)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'address0_.address_id as address_1_0_' {alias=a, className=com.example.jpa.se.entity.Address, tableAlias=address0_}
    |  \-[SQL_TOKEN] SqlFragment: 'address0_.city as city2_0_, address0_.country as country3_0_, address0_.postcode as postcode4_0_, address0_.province as province5_0_, address0_.street as street6_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[address0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'address address0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=address,tableAlias=address0_,origin=null,columns={,className=com.example.jpa.se.entity.Address}}

2017-12-02 17:05:53 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 17:05:53 DEBUG QueryTranslatorImpl:263 - HQL: SELECT a FROM com.example.jpa.se.entity.Address a
2017-12-02 17:05:53 DEBUG QueryTranslatorImpl:264 - SQL: select address0_.address_id as address_1_0_, address0_.city as city2_0_, address0_.country as country3_0_, address0_.postcode as postcode4_0_, address0_.province as province5_0_, address0_.street as street6_0_ from address address0_
2017-12-02 17:05:53 DEBUG ErrorCounter:113 - throwQueryException() : no errors
2017-12-02 17:05:53 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_,
        address0_.city as city2_0_,
        address0_.country as country3_0_,
        address0_.postcode as postcode4_0_,
        address0_.province as province5_0_,
        address0_.street as street6_0_ 
    from
        address address0_
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 0
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#1]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 1
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#2]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 2
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#3]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 3
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#6]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 4
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#7]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 5
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#8]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 6
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#4]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 7
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#9]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 8
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#10]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 9
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#14]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#1]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#1]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#2]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#2]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#3]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#3]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#6]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#6]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#7]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#7]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#8]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#8]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#9]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#9]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:160 - Resolving associations for [com.example.jpa.se.entity.Address#10]
2017-12-02 17:05:53 DEBUG TwoPhaseLoad:286 - Done materializing entity [com.example.jpa.se.entity.Address#10]
2017-12-02 17:05:53 DEBUG SQL:109 - 
    select
        address0_.address_id as address_1_0_,
        address0_.city as city2_0_,
        address0_.country as country3_0_,
        address0_.postcode as postcode4_0_,
        address0_.province as province5_0_,
        address0_.street as street6_0_ 
    from
        address address0_
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 0
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#1]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 1
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#2]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 2
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#3]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 3
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#6]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 4
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#7]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 5
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#8]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 6
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#4]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 7
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#9]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 8
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#10]
2017-12-02 17:05:53 DEBUG Loader:951 - Result set row: 9
2017-12-02 17:05:53 DEBUG Loader:1485 - Result row: EntityKey[com.example.jpa.se.entity.Address#14]
